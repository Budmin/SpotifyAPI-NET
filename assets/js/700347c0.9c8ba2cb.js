"use strict";(self.webpackChunkspotify_api_docs=self.webpackChunkspotify_api_docs||[]).push([[1663],{2011:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return h},frontMatter:function(){return n},metadata:function(){return c},toc:function(){return l}});var s=r(1527),i=r(6274);const n={id:"personalization",title:"Personalization",sidebar_label:"Personalization"},o=void 0,c={id:"web/personalization",title:"Personalization",description:"GetUsersTopTracks",source:"@site/versioned_docs/version-5.1.1/web/personalization.md",sourceDirName:"web",slug:"/web/personalization",permalink:"/SpotifyAPI-NET/docs/5.1.1/web/personalization",draft:!1,unlisted:!1,editUrl:"https://github.com/JohnnyCrazy/SpotifyAPI-NET/edit/master/SpotifyAPI.Docs/versioned_docs/version-5.1.1/web/personalization.md",tags:[],version:"5.1.1",lastUpdatedBy:"Brad",lastUpdatedAt:1705312467,formattedLastUpdatedAt:"Jan 15, 2024",frontMatter:{id:"personalization",title:"Personalization",sidebar_label:"Personalization"},sidebar:"someSidebar",previous:{title:"Library",permalink:"/SpotifyAPI-NET/docs/5.1.1/web/library"},next:{title:"Player",permalink:"/SpotifyAPI-NET/docs/5.1.1/web/player"}},d={},l=[{value:"GetUsersTopTracks",id:"getuserstoptracks",level:2},{value:"GetUsersTopArtists",id:"getuserstopartists",level:2},{value:"GetUsersRecentlyPlayedTracks",id:"getusersrecentlyplayedtracks",level:2}];function a(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"getuserstoptracks",children:"GetUsersTopTracks"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Get the current user\u2019s top tracks based on calculated affinity."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Example"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"[timeRange]"}),(0,s.jsx)(t.td,{children:"Over what time frame the affinities are compute."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"TimeRangeType.MediumTerm"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"[limit]"}),(0,s.jsx)(t.td,{children:"The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"20"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"[offset]"}),(0,s.jsx)(t.td,{children:"The index of the first entity to return. Default: 0 (i.e., the first track). Use with limit to get the next set of entities."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"0"})})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:["Returns a ",(0,s.jsx)(t.a,{href:"https://developer.spotify.com/web-api/object-model/#track-object-full",children:"FullTrack"})," wrapped inside a ",(0,s.jsx)(t.a,{href:"https://developer.spotify.com/web-api/object-model/#paging-object",children:"Paging-object"})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Usage"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"Paging<FullTrack> tracks = _spotify.GetUsersTopTracks();\ntracks.Items.ForEach(item => Console.WriteLine(item.Name)); //Display all fetched Track-Names (max 20)\nConsole.WriteLine(tracks.Total.ToString()) //Display total album track count\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"getuserstopartists",children:"GetUsersTopArtists"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Get the current user\u2019s top artists based on calculated affinity."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Example"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"[timeRange]"}),(0,s.jsx)(t.td,{children:"Over what time frame the affinities are compute."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"TimeRangeType.MediumTerm"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"[limit]"}),(0,s.jsx)(t.td,{children:"The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"20"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"[offset]"}),(0,s.jsx)(t.td,{children:"The index of the first entity to return. Default: 0 (i.e., the first track). Use with limit to get the next set of entities."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"0"})})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:["Returns a ",(0,s.jsx)(t.a,{href:"https://developer.spotify.com/web-api/object-model/#artist-object-full",children:"FullArtist"})," wrapped inside a ",(0,s.jsx)(t.a,{href:"https://developer.spotify.com/web-api/object-model/#paging-object",children:"Paging-object"})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Usage"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"Paging<FullArtist> artists = _spotify.GetUsersTopArtists();\nartists.Items.ForEach(item => Console.WriteLine(item.Name)); //Display all fetched Artist-Names (max 20)\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"getusersrecentlyplayedtracks",children:"GetUsersRecentlyPlayedTracks"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Get tracks from the current user\u2019s recent play history."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Example"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"[limit]"}),(0,s.jsx)(t.td,{children:"The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"20"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"[after]"}),(0,s.jsx)(t.td,{children:"Returns all items after (but not including) this cursor position."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"DateTime.Now.AddDays(-1)"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"[before]"}),(0,s.jsx)(t.td,{children:"Returns all items before (but not including) this cursor position."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"DateTime.Now.AddDays(-1)"})})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:["Returns a ",(0,s.jsx)(t.code,{children:"PlayHistory"})," wrapped inside a ",(0,s.jsx)(t.a,{href:"https://developer.spotify.com/web-api/object-model/#cursor-based-paging-object",children:"CursorPaging-object"})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Usage"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"CursorPaging<PlayHistory> histories = _spotify.GetUsersRecentlyPlayedTracks();\nhistories.Items.ForEach(item => Console.WriteLine(item.Track.Name));\n"})}),"\n",(0,s.jsx)(t.hr,{})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},6274:function(e,t,r){r.d(t,{Z:function(){return c},a:function(){return o}});var s=r(959);const i={},n=s.createContext(i);function o(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);